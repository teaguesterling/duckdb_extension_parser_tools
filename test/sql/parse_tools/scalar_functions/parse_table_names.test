# name: test/sql/parser_tools/scalar_functions/parse_table_names.test
# description: test parse_table_names scalar function
# group: [parse_table_names]

# Before we load the extension, this will fail
statement error
SELECT parse_table_names('select * from MyTable');
----
Catalog Error: Scalar Function with name parse_table_names does not exist!

# Require statement will ensure this test is run with this extension loaded
require parser_tools

query I
SELECT parse_table_names('select * from MyTable');
----
[MyTable]

# default behavior: exclude CTE
query I
SELECT parse_table_names('with cte_test as(select 1) select * from MyTable, cte_test');
----
[MyTable]

# default behavior: exclude CTE (explicitly specify true)
query I
SELECT parse_table_names('with cte_test as(select 1) select * from MyTable, cte_test', true);
----
[MyTable]

# test optional bool argument: don't exclude CTE tables
query I
SELECT parse_table_names('with cte_test as(select 1) select * from MyTable, cte_test', false);
----
[cte_test, MyTable, cte_test]

# Unsupported 
# -----------

# INSERT INTO ... SELECT
query I
select parse_table_names('INSERT INTO m SELECT * FROM n;');
----
[]

# UPDATE with FROM
query I
select parse_table_names('UPDATE o SET x = p.x FROM p WHERE o.id = p.id;');
----
[]

# DELETE with USING
query I
select parse_table_names('DELETE FROM q USING r WHERE q.id = r.id;');
----
[]

# CREATE VIEW AS SELECT
query I
select parse_table_names('CREATE VIEW v AS SELECT * FROM s JOIN t ON s.id = t.id;');
----
[]

# CREATE TABLE AS SELECT
query I
select parse_table_names('CREATE TABLE u AS SELECT * FROM v;');
----
[]

# no tables
query I
select parse_table_names('SELECT 1;');
----
[]

# malformed SQL should not error
query I
SELECT parse_table_names('SELECT * FROM WHERE');
----
[]
